basePath: /api/v1
definitions:
  models.CreateMedicineDTO:
    description: DTO for creating a new medicine
    properties:
      description:
        example: Pain reliever
        type: string
      dosage:
        example: 500mg
        type: string
      manufacturer:
        example: XZY Pharma
        type: string
      name:
        example: Paracetamol
        type: string
      price:
        example: 50
        format: int32
        minimum: 0
        type: integer
      stock:
        example: 75
        format: int32
        minimum: 0
        type: integer
    required:
    - description
    - dosage
    - manufacturer
    - name
    - price
    - stock
    type: object
  models.ErrorResponse:
    description: This struct represents the response structure for error handling.
    properties:
      code:
        description: HTTP status code
        example: 500
        format: int
        type: integer
      message:
        description: Human-readable error message
        example: Internal server error
        format: string
        type: string
    type: object
  models.LogIn:
    description: Contains credentials required for authentication
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: SecurePass123
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.Medicine:
    description: Medicine entity contains details about a medicine
    properties:
      created_at:
        description: Medicine creation time - auto-generated by the database
        type: string
      description:
        description: Medicine Description
        example: Pain reliever
        type: string
      dosage:
        description: Medicine Dosage
        example: 500mg
        type: string
      id:
        description: Unique ID of the user - auto generated by the database
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      manufacturer:
        description: Medicine Manufacturer
        example: XZY Pharma
        type: string
      name:
        description: Medicine Name
        example: Paracetamol
        type: string
      price:
        description: Medicine price
        example: 50
        format: int32
        type: integer
      stock:
        description: Medicine stock
        example: 75
        format: int32
        type: integer
      updated_at:
        description: Medicine update time - auto-generated by the database
        type: string
    type: object
  models.Name:
    description: Contains first and last name fields
    properties:
      firstname:
        example: John
        minLength: 4
        type: string
      lastname:
        example: Doe
        minLength: 4
        type: string
    type: object
  models.ServerResponse:
    description: Used for authentication responses
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
    type: object
  models.SignUpResponse:
    description: Contains the unique ID of the newly created user
    properties:
      id:
        description: unique ID of the user
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
    type: object
  models.SignUpUser:
    description: Contains required fields for creating a new user
    properties:
      age:
        example: 25
        minimum: 18
        type: integer
      email:
        example: user@example.com
        type: string
      name:
        $ref: '#/definitions/models.Name'
      password:
        example: SecurePass123
        minLength: 8
        type: string
      phone:
        description: for BD phone
        example: "01234567891"
        type: string
    required:
    - age
    - email
    - name
    - password
    - phone
    type: object
  models.UpdateMedicineDTO:
    description: DTO for updating a medicine information
    properties:
      description:
        example: Pain reliever
        type: string
      dosage:
        example: 500mg
        type: string
      manufacturer:
        example: XZY Pharma
        type: string
      name:
        example: Paracetamol
        type: string
      price:
        example: 50
        format: int32
        type: integer
      stock:
        example: 75
        format: int32
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: loknathdhar66@gmail.com
    name: API Support
    url: http://t.me/Dhar01
  description: Documentation of api of online medicine pharmacy - MediTrust
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.html
  title: MediTrust Backend API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user with email and password to obtain an access
        token in the response body, while the refresh token is set as a secure HTTP-only
        cookie.
      parameters:
      - description: User log in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LogIn'
      produces:
      - application/json
      responses:
        "200":
          description: 'Set-Cookie: refresh_token=<token>; HttpOnly; Secure; Path=/;
            Domain=<your-domain.com>'
          schema:
            type: string
        "400":
          description: Bad request received
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User Login
      tags:
      - user
  /logout:
    post:
      consumes:
      - application/json
      description: logs out the authenticated user by invalidating the refresh token.
        The refresh token is cleared by setting an expired cookie.
      produces:
      - application/json
      responses:
        "200":
          description: 'Set-Cookie: refresh_token=; HttpOnly; Secure; Path=/; Domain=<your-domain.com>;
            Max-Age=0'
          schema:
            type: string
        "401":
          description: Unauthorized - Invalid or expired token
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User Logout
      tags:
      - user
  /medicines:
    get:
      consumes:
      - application/json
      description: Fetch a list of available medicines
      produces:
      - application/json
      responses:
        "200":
          description: List of medicines
          schema:
            items:
              $ref: '#/definitions/models.Medicine'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all medicines
      tags:
      - medicines
    post:
      consumes:
      - application/json
      description: Create a new medicine on the store. Only an admin can create a
        medicine.
      parameters:
      - description: Create medicine details
        in: body
        name: medicine
        required: true
        schema:
          $ref: '#/definitions/models.CreateMedicineDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Medicine created successfully
          schema:
            $ref: '#/definitions/models.Medicine'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Creates a medicine info - Admin only
      tags:
      - medicines
  /medicines/{medID}:
    delete:
      consumes:
      - application/json
      description: Deletes information of a medicine by its ID
      parameters:
      - description: Medicine ID
        in: path
        name: medID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Medicine deleted successfully
          schema:
            type: ""
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Deletes a medicine info by its ID
      tags:
      - medicines
    get:
      consumes:
      - application/json
      description: Fetch information of a medicine by its ID
      parameters:
      - description: Medicine ID
        in: path
        name: medID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Medicine found
          schema:
            $ref: '#/definitions/models.Medicine'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a medicine info by its ID
      tags:
      - medicines
    put:
      consumes:
      - application/json
      description: Updates information of a medicine by its ID
      parameters:
      - description: Medicine ID
        in: path
        name: medID
        required: true
        type: string
      - description: Updated medicine details
        in: body
        name: medicine
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMedicineDTO'
      produces:
      - application/json
      responses:
        "202":
          description: Medicine updated successfully
          schema:
            $ref: '#/definitions/models.Medicine'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Updates a medicine info by its ID
      tags:
      - medicines
  /refresh:
    post:
      consumes:
      - application/json
      description: This endpoint retrieves the refresh token from the cookie and generates
        a new access token.
      produces:
      - application/json
      responses:
        "201":
          description: Access token generated successfully
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: Unauthorized request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate a new access token
      tags:
      - authentication
  /reset:
    post:
      consumes:
      - application/json
      description: This endpoint resets the medicine, address, and user databases.
      responses:
        "204":
          description: Database reset successfully
        "403":
          description: Forbidden – Not allowed outside development environment
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Reset all databases (development only)
      tags:
      - general
  /revoke:
    post:
      consumes:
      - application/json
      description: This endpoint revokes the refresh token, effectively logging them
        out.
      produces:
      - application/json
      responses:
        "204":
          description: Refresh token revoked successfully
        "401":
          description: Unauthorized – Invalid or missing refresh token
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Revoke refresh token
      tags:
      - authentication
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password.
      parameters:
      - description: User signup request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignUpUser'
      produces:
      - application/json
      responses:
        "201":
          description: 'ID: uuid'
          schema:
            $ref: '#/definitions/models.SignUpResponse'
        "400":
          description: Bad request received
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Sign up a user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: refresh-token
    type: apiKey
swagger: "2.0"
