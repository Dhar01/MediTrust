{
    "swagger": "2.0",
    "info": {
        "description": "Documentation of api of online medicine store.",
        "title": "Online Medicine Store API",
        "contact": {
            "name": "API Support",
            "url": "http://t.me/Dhar01",
            "email": "loknathdhar66@gmail.com"
        },
        "license": {
            "name": "GPL v3",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/medicines": {
            "get": {
                "description": "Fetch a list of available medicines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medicines"
                ],
                "summary": "Get all medicines",
                "responses": {
                    "200": {
                        "description": "List of medicines",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Medicine"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new medicine on the store. Only an admin can create a medicine.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medicines"
                ],
                "summary": "Creates a medicine info - Admin only",
                "parameters": [
                    {
                        "description": "Create medicine details",
                        "name": "medicine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateMedicineDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Medicine created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Medicine"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/medicines/{medID}": {
            "get": {
                "description": "Fetch information of a medicine by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medicines"
                ],
                "summary": "Get a medicine info by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medicine ID",
                        "name": "medID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medicine found",
                        "schema": {
                            "$ref": "#/definitions/models.Medicine"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates information of a medicine by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medicines"
                ],
                "summary": "Updates a medicine info by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medicine ID",
                        "name": "medID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated medicine details",
                        "name": "medicine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMedicineDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Medicine updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Medicine"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes information of a medicine by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medicines"
                ],
                "summary": "Deletes a medicine info by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medicine ID",
                        "name": "medID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Medicine deleted successfully",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateMedicineDTO": {
            "description": "DTO for creating a new medicine",
            "type": "object",
            "required": [
                "description",
                "dosage",
                "manufacturer",
                "name",
                "price",
                "stock"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "dosage": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "models.ErrorResponse": {
            "description": "This struct represents the response structure for error handling.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code",
                    "type": "integer"
                },
                "message": {
                    "description": "Human-readable error message",
                    "type": "string"
                }
            }
        },
        "models.Medicine": {
            "description": "Medicine entity contains details about a medicine",
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Medicine creation time - auto-generated by the database",
                    "type": "string"
                },
                "description": {
                    "description": "Medicine Description",
                    "type": "string"
                },
                "dosage": {
                    "description": "Medicine Dosage",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID of the user - auto generated by the database",
                    "type": "string"
                },
                "manufacturer": {
                    "description": "Medicine Manufacturer",
                    "type": "string"
                },
                "name": {
                    "description": "Medicine Name",
                    "type": "string"
                },
                "price": {
                    "description": "Medicine price",
                    "type": "integer"
                },
                "stock": {
                    "description": "Medicine stock",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "Medicine update time - auto-generated by the database",
                    "type": "string"
                }
            }
        },
        "models.UpdateMedicineDTO": {
            "description": "DTO for updating a medicine information",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dosage": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}